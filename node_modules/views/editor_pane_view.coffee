editor = require('views/editor_view') 

class EditorPaneView extends Backbone.View

  initialize: ->
    @_editors = []

  loadFile: (file, position={}) ->
    file.readContentsFromDisk()
    newEd = @_newEditor(file, position)
    @$el.append newEd.el
    setTimeout((-> newEd.$el.click()),10)

  _newEditor: (file, position) ->
    newEd = new editor.EditorView(model:file, position:position).render()
    newEd.on('moved resized', => @_updateLayout())
    newEd.on('focussed', => @_sendEditorsToBack())
    newEd.on('close', => @_remove(newEd))
    @_editors.push newEd
    @_updateLayout()
    newEd

  _remove: (ed) ->
    ed.$el.remove()    
    index = @_editors.indexOf(ed)
    @_editors.splice(index, 1)
    @_updateLayout()

  _sendEditorsToBack: ->
    e.sendToBack() for e in @_editors

  _updateLayout: ->
    layout = (e.toJSON() for e in @_editors)
    @trigger('layoutUpdated', layout)

exports.EditorPaneView = EditorPaneView