fs = require('fs')
file = require('models/file')

class ConfigurationManager
  configDir: "#{process.env.HOME}/.mredcontext"
  constructor: (@rootPath) ->

  updateLayout: (layout) ->
    config = {rootPath:@rootPath, layout:layout}
    @_writeConfig(config)

  configPath: -> "#{@configDir}/settings.json"

  _writeConfig: (config) ->
    writeConfig = =>
      writePromise = new $.Deferred()
      fs.writeFile(@configPath(), JSON.stringify(config), 'utf8', (err) ->
        if err
          writePromise.reject(err)
          throw err
        writePromise.resolve()
      )
      writePromise

    fs.exists(@configDir, (exists) => 
      if exists
        writeConfig()
      else
        @_createConfigDir().done(writeConfig)
    )

  _createConfigDir: ->
    promise = new $.Deferred()
    fs.mkdir(@configDir, (err) -> 
      if err
        promise.reject(err)
        throw err
      promise.resolve()
    )
    promise


exports.ConfigurationManager = ConfigurationManager