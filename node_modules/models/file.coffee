fs = require('fs')
configuration = require('configuration').configuration

class File extends Backbone.Model

  rootPath: ''

  initialize: ->
    @set(content: '', dirty: false)
    @on('change:content', => console.trace(); @set(dirty: true))

  projectPath: ->
    @get('path').substr(configuration.get('rootPath').length)
  name: ->
    @get('path').split('/').pop()

  readContentsFromDisk: ->
    readPromise = new $.Deferred()
    fs.readFile(@get('path'), 'utf8', (err, data) => 
      if err
        promise.reject(err)
        throw err
      @set({content: data, dirty: false}, {silent: true})
      @trigger('reloaded')
    )
    readPromise

  writeContentsToDisk: ->
    writePromise = new $.Deferred()
    fs.writeFile(@get('path'), @get('content'), 'utf8', (err) =>
      if err
        writePromise.reject(err)
        throw err
      @set(dirty: false)
      writePromise.resolve()
    )
    writePromise

  isDirty: ->
    @get('dirty')

  toString: ->
    "<File>:#{@projectPath()}"

module.exports.File = File