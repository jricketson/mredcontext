FileList = require('models/file_list')
FileFinder = require('views/file_finder_view')
EditorPane = require('views/editor_pane_view')
UnsavedFileList = require('views/unsaved_file_list_view')
UnsavedFileCollection = require('models/unsaved_file_collection')
configuration = require('configuration').configuration

setupShortcuts= (fileFinder) ->
  $(document).bind('keydown', 'ctrl+p', -> fileFinder.show())

exports.bootstrap= ->
  root_path = process.cwd() + "/"
  console.log("Starting in '#{root_path}'")
  configuration.loadConfigFor(root_path).done -> 

    fileList = new FileList.FileList(null, path: root_path)
    fileList.startRead().done ->
      console.log("finished reading files")

    fileFinder = new FileFinder.FileFinderView(model:fileList)
    $("body").append fileFinder.render().el

    editorPane = new EditorPane.EditorPaneView(el:$('#editorPane'))
    fileFinder.on('fileSelected', (file) -> editorPane.loadFile(file))
    editorPane.on('layoutUpdated', (layout) -> configuration.set(layout:layout))  

    unsavedFileCollection = new UnsavedFileCollection.UnsavedFileCollection(null, collection:fileList)
    unsavedFileList = new UnsavedFileList.UnsavedFileListView(model:unsavedFileCollection)
    $("body").append unsavedFileList.render().el

    setupShortcuts(fileFinder)
